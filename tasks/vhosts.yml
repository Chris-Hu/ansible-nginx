---
- name: Remove default nginx vhost config file (if configured).
  become: true
  file:
    path: "{{ nginx_default_vhost_path }}"
    state: absent
  when: nginx_remove_default_vhost
  notify: restart nginx

- name: Ensure nginx_vhost_path exists.
  become: true
  file:
    path: "{{ nginx_vhost_path }}"
    state: directory
  notify: reload nginx

- name: Add managed vhost config files.
  become: true
  template:
    src: "{{ item.template|default(nginx_vhost_template) }}"
    dest: "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}"
    force: yes
    owner: root
    group: root
    mode: 0644
  when: item.state|default('present') != 'absent'
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx

- name: "Ensure vhost root directory exist"
  stat:
    path: "{{ item.root }}"
  register: folder_stats
  with_items: "{{ nginx_vhosts }}"

- debug:
    var: folder_stats
    verbosity: 1   

- name: "Creating root dir"
  become: true
  file:
    path: "{{ item.item.root }}"
    state: directory
    mode: 0755
    group: "{{ nginx_user }}"
    owner: "{{ nginx_user }}"
    recurse: yes
  when: item.stat.exists == false
  with_items:
      - "{{ folder_stats.results }}"


- name: Remove managed vhost config files.
  become: true
  file:
    path: "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}"
    state: absent
  when: item.state|default('present') == 'absent'
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx

- name: Remove legacy vhosts.conf file.
  become: true
  file:
    path: "{{ nginx_vhost_path }}/vhosts.conf"
    state: absent
  notify: reload nginx
